<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:oscache="http://www.springmodules.org/schema/oscache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
	<context:component-scan base-package="com.matt.damon.springmvc">
		<!-- 排除@Controller加载 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- AOP annotation -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

	<!-- AOP log interceptor -->
	<bean id="logInterceptor" class="com.matt.damon.springmvc.aop.LogInterceptor"></bean>
	<!-- AOP 配置 -->
	<aop:config>
		<aop:pointcut id="logPointCut"
			expression="execution(public * com.matt.damon.springmvc.service.*.*(..))" />
		<aop:aspect id="logAOP" ref="logInterceptor">
			<!-- 局部切面 -->
			<!-- <aop:pointcut id="logPointCut" expression="execution(* com.matt.damon.springmvc.service.*.*(..))" 
				/> -->
			<aop:before method="before" pointcut-ref="logPointCut" />
			<aop:around method="around" pointcut-ref="logPointCut" />
			<aop:after method="afterReturning" pointcut-ref="logPointCut" />
		</aop:aspect>
	</aop:config>

	<!-- 缓存配置 -->
	<!-- 启用缓存注解功能 使用spring3的 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="default" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="andCache" />
			</set>
		</property>
	</bean>

</beans>